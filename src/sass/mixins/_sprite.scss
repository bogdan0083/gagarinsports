// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-left-white-name: 'arrow-left-white';
$arrow-left-white-x: 56px;
$arrow-left-white-y: 66px;
$arrow-left-white-offset-x: -56px;
$arrow-left-white-offset-y: -66px;
$arrow-left-white-width: 18px;
$arrow-left-white-height: 15px;
$arrow-left-white-total-width: 134px;
$arrow-left-white-total-height: 106px;
$arrow-left-white-image: '../img/icons.png';
$arrow-left-white: (56px, 66px, -56px, -66px, 18px, 15px, 134px, 106px, '../img/icons.png', 'arrow-left-white', );
$arrow-left-name: 'arrow-left';
$arrow-left-x: 84px;
$arrow-left-y: 66px;
$arrow-left-offset-x: -84px;
$arrow-left-offset-y: -66px;
$arrow-left-width: 18px;
$arrow-left-height: 15px;
$arrow-left-total-width: 134px;
$arrow-left-total-height: 106px;
$arrow-left-image: '../img/icons.png';
$arrow-left: (84px, 66px, -84px, -66px, 18px, 15px, 134px, 106px, '../img/icons.png', 'arrow-left', );
$check-name: 'check';
$check-x: 28px;
$check-y: 66px;
$check-offset-x: -28px;
$check-offset-y: -66px;
$check-width: 18px;
$check-height: 16px;
$check-total-width: 134px;
$check-total-height: 106px;
$check-image: '../img/icons.png';
$check: (28px, 66px, -28px, -66px, 18px, 16px, 134px, 106px, '../img/icons.png', 'check', );
$facebook-name: 'facebook';
$facebook-x: 28px;
$facebook-y: 38px;
$facebook-offset-x: -28px;
$facebook-offset-y: -38px;
$facebook-width: 18px;
$facebook-height: 18px;
$facebook-total-width: 134px;
$facebook-total-height: 106px;
$facebook-image: '../img/icons.png';
$facebook: (28px, 38px, -28px, -38px, 18px, 18px, 134px, 106px, '../img/icons.png', 'facebook', );
$headset-name: 'headset';
$headset-x: 56px;
$headset-y: 38px;
$headset-offset-x: -56px;
$headset-offset-y: -38px;
$headset-width: 18px;
$headset-height: 18px;
$headset-total-width: 134px;
$headset-total-height: 106px;
$headset-image: '../img/icons.png';
$headset: (56px, 38px, -56px, -38px, 18px, 18px, 134px, 106px, '../img/icons.png', 'headset', );
$instagram-name: 'instagram';
$instagram-x: 91px;
$instagram-y: 0px;
$instagram-offset-x: -91px;
$instagram-offset-y: 0px;
$instagram-width: 18px;
$instagram-height: 18px;
$instagram-total-width: 134px;
$instagram-total-height: 106px;
$instagram-image: '../img/icons.png';
$instagram: (91px, 0px, -91px, 0px, 18px, 18px, 134px, 106px, '../img/icons.png', 'instagram', );
$mail-name: 'mail';
$mail-x: 91px;
$mail-y: 28px;
$mail-offset-x: -91px;
$mail-offset-y: -28px;
$mail-width: 18px;
$mail-height: 18px;
$mail-total-width: 134px;
$mail-total-height: 106px;
$mail-image: '../img/icons.png';
$mail: (91px, 28px, -91px, -28px, 18px, 18px, 134px, 106px, '../img/icons.png', 'mail', );
$marker-2-name: 'marker-2';
$marker-2-x: 119px;
$marker-2-y: 0px;
$marker-2-offset-x: -119px;
$marker-2-offset-y: 0px;
$marker-2-width: 15px;
$marker-2-height: 18px;
$marker-2-total-width: 134px;
$marker-2-total-height: 106px;
$marker-2-image: '../img/icons.png';
$marker-2: (119px, 0px, -119px, 0px, 15px, 18px, 134px, 106px, '../img/icons.png', 'marker-2', );
$marker-name: 'marker';
$marker-x: 119px;
$marker-y: 56px;
$marker-offset-x: -119px;
$marker-offset-y: -56px;
$marker-width: 14px;
$marker-height: 18px;
$marker-total-width: 134px;
$marker-total-height: 106px;
$marker-image: '../img/icons.png';
$marker: (119px, 56px, -119px, -56px, 14px, 18px, 134px, 106px, '../img/icons.png', 'marker', );
$mouse-name: 'mouse';
$mouse-x: 119px;
$mouse-y: 28px;
$mouse-offset-x: -119px;
$mouse-offset-y: -28px;
$mouse-width: 14px;
$mouse-height: 18px;
$mouse-total-width: 134px;
$mouse-total-height: 106px;
$mouse-image: '../img/icons.png';
$mouse: (119px, 28px, -119px, -28px, 14px, 18px, 134px, 106px, '../img/icons.png', 'mouse', );
$progress-end-name: 'progress-end';
$progress-end-x: 0px;
$progress-end-y: 94px;
$progress-end-offset-x: 0px;
$progress-end-offset-y: -94px;
$progress-end-width: 11px;
$progress-end-height: 12px;
$progress-end-total-width: 134px;
$progress-end-total-height: 106px;
$progress-end-image: '../img/icons.png';
$progress-end: (0px, 94px, 0px, -94px, 11px, 12px, 134px, 106px, '../img/icons.png', 'progress-end', );
$rocket-name: 'rocket';
$rocket-x: 0px;
$rocket-y: 0px;
$rocket-offset-x: 0px;
$rocket-offset-y: 0px;
$rocket-width: 81px;
$rocket-height: 28px;
$rocket-total-width: 134px;
$rocket-total-height: 106px;
$rocket-image: '../img/icons.png';
$rocket: (0px, 0px, 0px, 0px, 81px, 28px, 134px, 106px, '../img/icons.png', 'rocket', );
$telegram-name: 'telegram';
$telegram-x: 0px;
$telegram-y: 66px;
$telegram-offset-x: 0px;
$telegram-offset-y: -66px;
$telegram-width: 18px;
$telegram-height: 18px;
$telegram-total-width: 134px;
$telegram-total-height: 106px;
$telegram-image: '../img/icons.png';
$telegram: (0px, 66px, 0px, -66px, 18px, 18px, 134px, 106px, '../img/icons.png', 'telegram', );
$vk-name: 'vk';
$vk-x: 0px;
$vk-y: 38px;
$vk-offset-x: 0px;
$vk-offset-y: -38px;
$vk-width: 18px;
$vk-height: 18px;
$vk-total-width: 134px;
$vk-total-height: 106px;
$vk-image: '../img/icons.png';
$vk: (0px, 38px, 0px, -38px, 18px, 18px, 134px, 106px, '../img/icons.png', 'vk', );
$spritesheet-width: 134px;
$spritesheet-height: 106px;
$spritesheet-image: '../img/icons.png';
$spritesheet-sprites: ($arrow-left-white, $arrow-left, $check, $facebook, $headset, $instagram, $mail, $marker-2, $marker, $mouse, $progress-end, $rocket, $telegram, $vk, );
$spritesheet: (134px, 106px, '../img/icons.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
